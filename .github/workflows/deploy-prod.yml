on:
  release:
    types: [published]

env:
  DOCKER_TLS_VERIFY: "1"
  DOCKER_HOST: "tcp://128.199.242.117:2376"
  DOCKER_CERT_PATH: "certs"

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create .env file
        env:
          ENV: prod
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DISK_PATH: ${{ secrets.DISK_PATH }}
          TINYMCE_API_KEY: ${{ secrets.TINYMCE_API_KEY }}
        run: |
          touch .env
          echo ENV="$ENV" >> .env
          echo SECRET_KEY="$SECRET_KEY" >> .env
          echo MAIL_SERVER="smtp.googlemail.com" >> .env
          echo MAIL_PORT=587 >> .env
          echo MAIL_USE_TLS="true" >> .env
          echo MAIL_USERNAME="$MAIL_USERNAME" >> .env
          echo MAIL_PASSWORD="$MAIL_PASSWORD" >> .env
          echo POSTGRES_USER="$POSTGRES_USER" >> .env
          echo POSTGRES_PASSWORD="$POSTGRES_PASSWORD" >> .env
          echo POSTGRES_DB="alpine" >> .env
          echo DISK_PATH="$DISK_PATH" >> .env
          echo TINYMCE_API_KEY="$TINYMCE_API_KEY" >> .env

      - name: Install Docker certs
        env:
          CA: ${{ secrets.CA }}
          CLIENT_CERT: ${{ secrets.CLIENT_CERT }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
        run: |
          mkdir $DOCKER_CERT_PATH
          echo "$CA" > $DOCKER_CERT_PATH/ca.pem
          echo "$CLIENT_CERT" > $DOCKER_CERT_PATH/cert.pem
          echo "$CLIENT_KEY" > $DOCKER_CERT_PATH/key.pem
          docker-compose build
          docker-compose down
          docker-compose up -d --force-recreate
          rm -rf $DOCKER_CERT_PATH
